<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd"><!-- 参数管理手工映射SQL语句 -->
<!-- 参数管理手工映射SQL语句 -->
<mapper namespace="returnOrderCreate">


    <!-- 列表查询 -->
    <select id="queryList" parameterType="map" resultType="dto">
        SELECT
        order_buy.id,
        order_buy.order_no,
        order_buy.create_order_time,
        provider.name AS provider_name,
        order_buy.create_order_user,
        order_buy.enter_library_time,
        order_buy.status
        FROM
        oms_order_buy order_buy
        LEFT JOIN oms_cmn_provider provider ON provider.id = order_buy.coma
        WHERE
        order_buy.is_delete = 'N'
        <if test="null!=status">and order_buy.status = #{order_buy.status}</if>
    </select>

    <!-- 订单修改 -->
    <update id="updateInfo" parameterType="dto">
        UPDATE oms_order_buy
        SET
        <if test="null!=contract_id  and ''!= contract_id">contract_id = #{contract_id} ,</if>
        <if test="null!=coma  and ''!= coma">coma = #{coma} ,</if>
        <if test="null!=comb  and ''!= comb">comb=#{comb} ,</if>
        <if test="null!=amount  and ''!= amount">amount=#{amount} ,</if>
        <if test="null!=start_time  and ''!= start_time">start_time = #{start_time} ,</if>
        <if test="null!=end_time  and ''!= end_time">end_time = #{end_time} ,</if>
        <if test="null!=create_order_time  and ''!= create_order_time">create_order_time = #{create_order_time} ,</if>
        <if test="null!=create_order_user  and ''!= create_order_user">create_order_user = #{create_order_user} ,</if>
        <if test="null!=enter_library_time  and ''!= enter_library_time">enter_library_time = #{enter_library_time} ,
        </if>
        <if test="null!=status">status = #{status} ,</if>
        <if test="null!=updator  and ''!= updator">updator = #{updator} ,</if>
        update_time = now()
        where
        1=1
        <if test="null!=order_id  and ''!= order_id">
            and id = #{order_id}
        </if>
        <if test="null!=order_no  and ''!= order_no">
            OR order_no = CONCAT('O', #{order_no}))
        </if>
    </update>

    <!-- 对象查询 -->
    <select id="getInfo" parameterType="map" resultType="dto">
        SELECT
        order_buy.id,
        order_buy.order_no,
        contract.number,
        provider. NAME AS coma,
        provider1. NAME AS comb,
        order_buy.amount,
        order_buy.start_time,
        order_buy.end_time,
        order_buy.create_order_time,
        order_buy.create_order_user,
        order_buy.enter_library_time
        FROM
        oms_order_buy order_buy
        LEFT JOIN oms_contract contract ON contract.id = order_buy.contract_id
        LEFT JOIN oms_cmn_provider provider ON provider.id = order_buy.coma
        LEFT JOIN oms_cmn_provider provider1 ON provider1.id = order_buy.comb
        where
        order_buy.id= #{id}
    </select>

    <!--退货单商品添加 -->
    <insert id="insertSkuInfo" parameterType="map">
        INSERT INTO oms_order_return_sku (
        sku_id,
        order_id,
        batch_number,
        `number`,
        measure_unit,
        price,
        amount,
        create_time,
        creator,
        update_time,
        updator
        )
        VALUES
        (
        #{sku_id},
        (select id from oms_order_return where buy_order_id = #{order_id}),
        #{batch_number},
        #{sku_number},
        #{measure_unit},
        #{sku_price},
        #{amount},
        now(),
        #{creator},
        now(),
        #{updator}
        )
        <selectKey resultType="java.lang.String" keyProperty="id">
            SELECT LAST_INSERT_ID() as id
        </selectKey>
    </insert>

    <!--退货单单商品金额合计 -->
    <select id="sumOrderSkuInfo" parameterType="map" resultType="dto">
        SELECT
        order_id,
        sum(amount) as amount
        FROM
        oms_order_return_sku
        WHERE
        order_id = (
        SELECT
        id
        FROM
        oms_order_buy
        WHERE
        order_no = CONCAT('O', #{order_no})
        )
        GROUP BY order_id
    </select>
</mapper>
