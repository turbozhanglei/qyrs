<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd"><!-- 参数管理手工映射SQL语句 -->

<!-- 参数管理手工映射SQL语句 -->
<!-- ASN表商品关联表 -->
<mapper namespace="picking">

    <sql id="sql_where">
        <if test="null!=number  and ''!= number">
            and a.number LIKE concat('%',#{number},'%')
        </if>
        <if test="null!=id  and ''!= id">
            and a.id = #{id}
        </if>
    </sql>


    <!-- 列表查询 -->
    <select id="queryList" parameterType="map" resultType="dto">
        SELECT a.*,b.val as type_name,sc.val as statusval
        FROM w_picking a
        LEFT JOIN sys_config AS b ON (a.picking_type = b.id)
        LEFT JOIN sys_config sc on a.`status`=sc.id
        <include refid="sql_where"/>
        ORDER by a.id
        <if test="null!=start">
            limit #{start},#{end}
        </if>
    </select>

    <!-- 列表数量查询 -->
    <select id="queryListCount" parameterType="map" resultType="dto">
        SELECT count(1) as total
        FROM w_picking a
        <include refid="sql_where"/>
        ORDER by a.id
    </select>

    <!-- 对象查询 -->
    <select id="getInfo" parameterType="map" resultType="dto">
        SELECT a.*
        FROM w_picking a
        WHERE 1=1
        <include refid="sql_where"/>
    </select>

    <!-- 插入 -->
    <insert id="saveInfo" parameterType="map">
        insert into w_picking
        (
        picking_no,
        picking_type,
        picking_num,
        remark,
        create_time,
        creator,
        is_delete
        )
        values (#{picking_no}, #{picking_type},
        #{picking_num}, #{remark}, now(),
        #{creator}, 'N')
        <selectKey resultType="java.lang.String" keyProperty="id">
            SELECT LAST_INSERT_ID() as id
        </selectKey>
    </insert>

    <!-- 删除 -->
    <update id="deleteInfo" parameterType="map">
        UPDATE w_picking set is_delete = 'Y' where id = #{id}
    </update>

    <!-- 修改 -->
    <update id="updateInfo" parameterType="map">
        UPDATE w_picking
        set
        <if test="null!=picking_no  and ''!= picking_no">
            picking_no = #{picking_no},
        </if>
        <if test="null!=picking_type  and ''!= picking_type">
            picking_type = #{picking_type},
        </if>
        <if test="null!=add_picking_num  and ''!= add_picking_num">
            picking_num = picking_num+#{add_picking_num},
        </if>
        <if test="null!=sub_picking_num  and ''!= sub_picking_num">
            picking_num = picking_num-#{sub_picking_num},
        </if>
        <if test="null!=add_no_package_num  and ''!= add_no_package_num">
            no_package_num = no_package_num+#{add_no_package_num},
        </if>
        <if test="null!=sub_no_package_num  and ''!= sub_no_package_num">
            no_package_num = no_package_num-#{sub_no_package_num},
        </if>
        <if test="null!=remark  and ''!= remark">
            remark = #{remark},
        </if>
        <if test="null!=updator  and ''!= updator">
            updator = #{updator},
        </if>
        update_time = now()
        where id = #{id}
    </update>

    <select id="pickingSkuReport" parameterType="map" resultType="dto">
        SELECT a.*,ws.`name` as settingname,f.`name` as facilityname,
        GROUP_CONCAT(r.`name`,',') as receiptname,b.batch_no,s1.val as pickingtype
        FROM w_picking a
        LEFT JOIN w_picking_sku s ON a.id = s.picking_id
        LEFT JOIN w_warehouse_site_setting ws ON s.setting_id = ws.id
        LEFT JOIN w_warehouse_facility_setting f ON s.facility_id = f.id
        LEFT JOIN w_receipt r ON s.receipt_id = r.id
        LEFT JOIN w_out_batch b ON s.allot_id = b.id
        LEFT JOIN sys_config s1 ON a.picking_type = s1.id
        WHERE 1 = 1 AND a.is_delete = 'N'
        <if test="null!=picking_no  and ''!= picking_no">
            and a.picking_no LIKE concat('%',#{picking_no},'%')
        </if>
        <if test="null!=picking_type  and ''!= picking_type">
            and a.picking_type = #{picking_type}
        </if>
        <if test="null!=settingname  and ''!= settingname">
            and ws.name LIKE concat('%',#{settingname},'%')
        </if>
        <if test="null!=facilityname  and ''!= facilityname">
            and f.name LIKE concat('%',#{providername},'%')
        </if>
        GROUP by a.id
        <if test="null!=start">
            limit #{start},#{end}
        </if>
    </select>

    <select id="pickingSkuReportCount" parameterType="map" resultType="dto">
        SELECT count(1) as total
        FROM w_picking a
        LEFT JOIN w_picking_sku s ON a.id = s.picking_id
        LEFT JOIN w_warehouse_site_setting ws ON s.setting_id = ws.id
        LEFT JOIN w_warehouse_facility_setting f ON s.facility_id = f.id
        LEFT JOIN w_receipt r ON s.receipt_id = r.id
        LEFT JOIN w_out_batch b ON s.allot_id = b.id
        LEFT JOIN sys_config s1 ON a.picking_type = s1.id
        WHERE 1 = 1 AND a.is_delete = 'N'
        <if test="null!=picking_no  and ''!= picking_no">
            and a.picking_no LIKE concat('%',#{picking_no},'%')
        </if>
        <if test="null!=picking_type  and ''!= picking_type">
            and a.picking_type = #{picking_type}
        </if>
        <if test="null!=settingname  and ''!= settingname">
            and ws.name LIKE concat('%',#{settingname},'%')
        </if>
        <if test="null!=facilityname  and ''!= facilityname">
            and f.name LIKE concat('%',#{providername},'%')
        </if>
        GROUP by a.id
    </select>


    <update id="updatePickingInfo" parameterType="map">
        UPDATE w_picking
        set
        <if test="null!=status">
            status = #{status},
        </if>
        update_time = now()
        where id = #{id}
    </update>


    <update id="updatePickStatus" parameterType="map">
        UPDATE w_order_sale
        SET STATUS = 728
        WHERE
        id IN (
        SELECT
        a.id
        FROM
        (
        SELECT
        e.id
        FROM
        w_picking AS c
        left join w_picking_sku as p on c.id=p.picking_id
        LEFT JOIN w_batch_allot AS d ON (p.allot_id = d.id)
        LEFT JOIN w_out_batch_sale AS e ON (d.sale_order_id = e.id)
        WHERE
        c.id = #{id}
        )as a
        )
    </update>

    <!--更新改批次商品下的订单节点信息-->
    <update id="updateSaleByPickingId" parameterType="map">
        UPDATE w_order_sale
        SET STATUS = #{status}
        WHERE
        id IN (
        SELECT
        a.id
        FROM
        (
        SELECT
        f.id
        FROM
        w_batch_allot AS c
        LEFT JOIN w_order_sale AS f ON (c.sale_order_id = f.id)
        WHERE
        c.id = #{id}
        )as a
        )

    </update>
</mapper>
