<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd"><!-- 参数管理手工映射SQL语句 -->
<!-- 参数管理手工映射SQL语句 -->
<mapper namespace="sinkAllocation">

    <sql id="sql_where">
        <if test="null!=status">
            and a.status = #{status}
        </if>
        <if test="null!=sku_name  and ''!= sku_name">
            and obs.name LIKE concat('%',#{sku_name},'%')
        </if>
        <if test="null!=sku_level  and ''!= sku_level">
            and obs.sku_level LIKE concat('%',#{sku_level},'%')
        </if>
        <if test="null!=driver_name  and ''!= driver_name">
            and e.drivername LIKE concat('%',#{driver_name},'%')
        </if>
        <if test="null!=driver_car_number  and ''!= driver_car_number">
            and e.driver_number LIKE concat('%',#{driver_car_number},'%')
        </if>
        <if test="null!=client_name  and ''!= client_name">
            and c.client_name LIKE concat('%',#{client_name},'%')
        </if>
        <if test="null!=creator_name  and ''!= creator_name">
            and u.username LIKE concat('%',#{creator_name},'%')
        </if>
        <if test="null!=bill  and ''!= bill">
            and obc.bill LIKE concat('%',#{bill},'%')
        </if>
        <if test="null!=inspecter_result  and ''!= inspecter_result">
            and obc.inspecter_result=#{inspecter_result}
        </if>
        <if test="null!=id  and ''!= id">
            and a.id = #{id}
        </if>
        <if test="null!=customer_id  and  ''!= customer_id">
            and a.provider_id = #{customer_id}
        </if>
        <if test="null!=provider_id  and ''!= provider_id">
            and a.provider_id = #{provider_id}
        </if>
    </sql>
    <!-- 列表查询 -->
    <select id="queryList" parameterType="map" resultType="dto">
        SELECT
        a.*, obs. NAME AS productname,
        obs.`level` AS productlevel,
        obc.unit_volume,
        obc.unit_weight,
        a.batch_number,
        t. NAME AS tname,
        c.client_name,
        wss.number,
        e.drivername,
        e.driver_number,
        obc.bill,
        u.username as creator_name,
        obc.inspecter_result,
        t.number as tray_number
        FROM
        w_order_in_store a
        LEFT JOIN w_order_buy_sku obs ON obs.id = a.buy_sku_id
        LEFT JOIN w_tray t ON t.id = a.tray_id
        LEFT JOIN w_customer c ON c.id = a.provider_id
        LEFT JOIN w_warehouse_site_setting wss ON wss.id = a.setting_id
        LEFT JOIN w_order_buy_checked obc ON obc.id = a.buy_checked_id
        LEFT JOIN sys_user u ON u.id = a.creator
        LEFT JOIN
        (
        SELECT
        a.buy_sku_id,
        GROUP_CONCAT(b.drivername) drivername,
        GROUP_CONCAT(b.driver_number) driver_number
        FROM
        w_order_buy_sku_driver a
        LEFT JOIN
        w_driverinfo b on a.driver_id = b.id
        WHERE a.is_delete ='N' AND b.is_delete ='N'
        GROUP BY a.buy_sku_id
        ) e on e.buy_sku_id =obc.buy_sku_id
        WHERE
        a.is_delete = 'N'
        <include refid="sql_where"/>
        order by a.create_time DESC
        <if test="null!=start">
            limit ${start},${end}
        </if>
    </select>
    <select id="queryListCount" parameterType="map" resultType="dto">
        select
        count(1) as total
        FROM
        w_order_in_store a
        LEFT JOIN w_order_buy_sku obs ON obs.id = a.buy_sku_id
        LEFT JOIN w_tray t ON t.id = a.tray_id
        LEFT JOIN w_customer c ON c.id = a.provider_id
        LEFT JOIN w_warehouse_site_setting wss ON wss.id = a.setting_id
        LEFT JOIN w_order_buy_checked obc ON obc.id = a.buy_checked_id
        LEFT JOIN sys_user u ON u.id = a.creator
        LEFT JOIN
        (
        SELECT
        a.buy_sku_id,
        GROUP_CONCAT(b.drivername) drivername,
        GROUP_CONCAT(b.driver_number) driver_number
        FROM
        w_order_buy_sku_driver a
        LEFT JOIN
        w_driverinfo b on a.driver_id = b.id
        WHERE a.is_delete ='N' AND b.is_delete ='N'
        GROUP BY a.buy_sku_id
        ) e on e.buy_sku_id =obc.buy_sku_id
        WHERE
        a.is_delete = 'N'
        <include refid="sql_where"/>
    </select>
    <!-- 对象查询 (有问题,未验证) -->
    <select id="getInfo" parameterType="map" resultType="dto">
        SELECT
        contract.id,
        contract.number,
        users.username,
        contract.type,
        provider. NAME AS coma,
        provider1. NAME AS comb,
        contract.create_time,
        contract.begin_time,
        contract.end_time,
        contract.totals,
        contract.status
        FROM
        oms_contract contract
        LEFT JOIN sys_user users ON users.id = contract.user_id
        LEFT JOIN oms_cmn_provider provider ON provider.id = contract.coma
        LEFT JOIN oms_cmn_provider provider1 ON provider1.id = contract.comb
        where
        contract.id= #{id}
    </select>

    <!-- 修改 -->
    <update id="updateInfo" parameterType="dto">
        UPDATE oms_contract
        SET
        <if test="null!=number  and ''!= number">contract.number = #{number} ,</if>
        <if test="null!=type">contract.type = #{type} ,</if>
        <if test="null!=create_time  and ''!= create_time">contract.create_time=#{create_time} ,</if>
        <if test="null!=begin_time  and ''!= begin_time">contract.begin_time = #{begin_time} ,</if>
        <if test="null!=end_time  and ''!= end_time">contract.end_time = #{end_time} ,</if>
        <if test="null!=totals  and ''!= totals">contract.totals = #{totals} ,</if>
        <if test="null!=status">contract.status = #{status} ,</if>
        <if test="null!=updator  and ''!= updator">updator = #{updator} ,</if>
        update_time = now()
        where contract.id= #{id}
    </update>
</mapper>
