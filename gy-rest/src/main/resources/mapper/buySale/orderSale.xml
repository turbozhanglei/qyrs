<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd"><!-- 参数管理手工映射SQL语句 -->
<!-- 参数管理手工映射SQL语句 -->
<mapper namespace="order_sale">


    <!-- 列表查询 -->
    <select id="queryList" parameterType="map" resultType="dto">
        SELECT
        order_sale.id,
        order_sale.order_no,
        order_sale.create_order_time,
        provider.name AS provider_name,
        order_sale.create_order_user,
        order_sale.enter_library_time,
        order_sale.status
        FROM
        oms_order_sale order_sale
        LEFT JOIN oms_cmn_provider provider ON provider.id = order_sale.coma
        WHERE
        order_sale.is_delete = 'N'
        <if test="null!=status">and order_sale.status = #{status}</if>
    </select>

    <!-- 订单修改 -->
    <update id="updateInfo" parameterType="dto">
        UPDATE oms_order_sale set

        <if test="null!=contract_id  and ''!= contract_id">contract_id = #{contract_id} ,</if>
        <if test="null!=coma  and ''!= coma">coma = #{coma} ,</if>
        <if test="null!=comb  and ''!= comb">comb=#{comb} ,</if>
        <if test="null!=amount  and ''!= amount">amount=#{amount} ,</if>
        <if test="null!=start_time  and ''!= start_time">start_time = #{start_time} ,</if>
        <if test="null!=end_time  and ''!= end_time">end_time = #{end_time} ,</if>
        <if test="null!=create_order_time  and ''!= create_order_time">create_order_time = #{create_order_time} ,</if>
        <if test="null!=create_order_user  and ''!= create_order_user">create_order_user = #{create_order_user} ,</if>
        <if test="null!=enter_library_time  and ''!= enter_library_time">enter_library_time = #{enter_library_time} ,
        </if>
        <if test="null!=status">status = #{status} ,</if>
        <if test="null!=updator  and ''!= updator">updator = #{updator} ,</if>
        update_time = now()
        where
        1=1
        <if test="null!=order_id  and ''!= order_id">
            and id = #{order_id}
        </if>
        <if test="null!=order_no  and ''!= order_no">
            OR order_no = CONCAT('O', #{order_no}))
        </if>
    </update>

    <!-- 对象添加 -->
    <insert id="saveInfo" parameterType="map">
        INSERT INTO oms_order_sale (
        order_no,
        contract_id,
        coma,
        comb,
        start_time,
        end_time,
        create_order_time,
        create_order_user,
        out_library_time,
        create_time,
        creator,
        update_time,
        updator
        )
        VALUES
        (
        CONCAT('O', #{order_no}),
        #{contract_id},
        #{coma_id},
        #{comb_id},
        #{start_time},
        #{end_time},
        #{create_order_time},
        #{create_order_user},
        #{out_library_time},
        now(),
        #{creator},
        now(),
        #{updator}
        )
    </insert>

    <!--订单商品列表查询 -->
    <select id="querySkuList" parameterType="map" resultType="dto">
        SELECT
        order_sale_sku.id,
        sku.number as sku_number ,
        sku. NAME AS sku_name,
        sku. LEVEL,
        sku. LEVEL AS LEVEL1,
        order_sale_sku.batch_number,
        order_sale_sku.number,
        order_sale_sku.measure_unit,
        order_sale_sku.price,
        order_sale_sku.amount
        FROM
        oms_order_sale_sku order_sale_sku
        LEFT JOIN oms_sku sku ON sku.id = order_sale_sku.sku_id
        where
        order_sale_sku.order_id = #{id}
    </select>

    <!--订单商品添加 -->
    <insert id="insertSkuInfo" parameterType="map">
        INSERT INTO oms_order_sale_sku (
        sku_id,
        order_id,
        batch_number,
        number,
        measure_unit,
        price,
        amount,
        create_time,
        creator,
        update_time,
        updator
        )
        VALUES
        (
        #{sku_id},
        (select id from oms_order_sale where order_no = CONCAT('O', #{order_no})),
        #{batch_number},
        #{sale_sku_number},
        #{measure_unit},
        #{sku_price},
        #{amount},
        now(),
        #{creator},
        now(),
        #{updator}
        )
        <selectKey resultType="java.lang.String" keyProperty="id">
            SELECT LAST_INSERT_ID() as id
        </selectKey>
    </insert>

    <!--订单商品对象查询 -->
    <select id="selectSkuInfo" parameterType="map" resultType="dto">
        select
        order_sale_sku.order_id,
        sku.name AS sku_name,
        sku.number as sku_number,
        sku. LEVEL,
        sku. LEVEL AS LEVEL1,
        order_sale_sku.batch_number,
        order_sale_sku.number as sale_sku_number,
        order_sale_sku.measure_unit,
        order_sale_sku.price,
        order_sale_sku.amount as sku_amount,
        order_sale_sku.remark
        FROM
        oms_order_sale_sku order_sale_sku
        LEFT JOIN oms_sku sku ON sku.id = order_sale_sku.sku_id
        where order_sale_sku.id = #{id}
    </select>

    <!--订单商品对象修改 -->
    <update id="insertSkuUpdate" parameterType="map">
        UPDATE oms_order_sale_sku SET
        update_time = now()
        <if test="null!=batch_number  and ''!= batch_number">batch_number = #{batch_number} ,</if>
        <if test="null!=sku_number  and ''!= sku_number">sku_number = #{sku_number} ,</if>
        <if test="null!=measure_unit  and ''!= measure_unit">measure_unit = #{measure_unit} ,</if>
        <if test="null!=amount  and ''!= amount">amount = #{amount} ,</if>
        where id = #{id}
    </update>

    <!--订单商品金额合计 -->
    <select id="sumOrderSkuInfo" parameterType="map" resultType="dto">
        SELECT
        order_id,
        sum(amount) as amount
        FROM
        oms_order_sale_sku
        WHERE
        order_id = (
        SELECT
        id
        FROM
        oms_order_sale
        WHERE
        order_no = CONCAT('O', #{order_no})
        )
        GROUP BY order_id
    </select>
</mapper>
