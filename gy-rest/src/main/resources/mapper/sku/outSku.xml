<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd"><!-- 参数管理手工映射SQL语句 -->
<!-- 参数管理手工映射SQL语句 -->
<mapper namespace="outSku">


    <sql id="sql_where">
        <if test="null!=warehouse_number  and ''!= warehouse_number">
            and e.number LIKE concat('%',#{warehouse_number},'%')
        </if>
        <if test="null!=driver_number  and ''!= driver_number">
            and d.driver_number LIKE concat('%',#{driver_number},'%')
        </if>
        <if test="null!=drivername  and ''!= drivername">
            and d.drivername LIKE concat('%',#{drivername},'%')
        </if>
        <if test="null!=status">
            and a.status = #{status}
        </if>
        <if test="null!=order_no  and ''!= order_no">
            and s.order_no LIKE concat('%',#{order_no},'%')
        </if>
        <if test="null!=name  and ''!= name">
            and sku.name LIKE concat('%',#{name},'%')
        </if>
        <if test="null!=customer_no  and ''!= customer_no">
            and s.customer_no LIKE concat('%',#{customer_no},'%')
        </if>
        <if test="null!=order_licence  and ''!= order_licence">
            and s.order_licence LIKE concat('%',#{order_licence},'%')
        </if>

        <if test="null!=recipient_store  and ''!= recipient_store">
            and s.recipient_store LIKE concat('%',#{recipient_store},'%')
        </if>
        <if test="null!=recipient_store_address  and ''!= recipient_store_address">
            and s.recipient_store_address LIKE concat('%',#{recipient_store_address},'%')
        </if>
        <if test="null!=out_stock_num  and ''!= out_stock_num">
            and a.out_stock_num LIKE concat('%',#{out_stock_num},'%')
        </if>
        <if test="null!=startdate  and ''!= startdate">
            and s.out_stock >= #{startdate}
        </if>
        <if test="null!=enddate  and ''!= enddate">
            and s.out_stock &lt;= #{enddate}
        </if>
        <if test="null!=id  and ''!= id">
            and a.id = #{id}
        </if>
    </sql>

    <!-- 查询 -->
    <select id="queryList" parameterType="map" resultType="dto">
        SELECT
        a.*, s.*, sku.`name`,
        c.val AS statusval,
        b.driver_id,
        d.drivername,
        d.driver_number,
        oss.warehouse_number AS warehouse_number,
        oss.tray_number as tray_number,
        sku.unit_volume,
        sku.unit_weight,
        sku.`level`,
        wc.client_name
        FROM
        w_order_sale_sku AS a
        LEFT JOIN w_order_sale s ON a.sale_id = s.id
        LEFT JOIN w_sku sku ON a.sku_id = sku.id
        LEFT JOIN sys_config c ON a.`status` = c.id
        LEFT JOIN w_order_sale_sku_driver b ON a.id = b.sale_sku_id
        LEFT JOIN w_driverinfo d ON b.driver_id = d.id
        LEFT JOIN  (
        SELECT
        oss.in_batch_number,
        t.number AS tray_number,
        e.number AS warehouse_number
        FROM
        w_order_store_sku oss
        LEFT JOIN w_tray t ON oss.tray_id = t.id
        LEFT JOIN w_warehouse_site_setting e ON oss.setting_id = e.id
        GROUP BY
        oss.in_batch_number
        ) oss on oss.in_batch_number = a.in_batch_number
        LEFT JOIN w_customer wc on s.customer_id = wc.id
        WHERE
        a.is_delete = 'N'
        AND a. STATUS = 49

        <include refid="sql_where"/>
        ORDER BY a.id
        <if test="null!=start">
            limit #{start},#{end}
        </if>
    </select>


    <!-- 查询 -->
    <select id="queryBuyList" parameterType="map" resultType="dto">
        SELECT
        s.*
        FROM
        w_order_store_sku AS s
        WHERE
        s.is_delete = 'N'
        and s.`status` = 1
        and s.buy_sku_id = #{buy_sku_id}
        ORDER BY s.create_time
        limit ${num}
    </select>

    <!-- 列表数量查询 -->
    <select id="queryListCount" parameterType="map" resultType="dto">
        SELECT
          count(1) as total
        FROM
        w_order_sale_sku AS a
        LEFT JOIN w_order_sale s ON a.sale_id = s.id
        LEFT JOIN w_sku sku ON a.sku_id = sku.id
        LEFT JOIN sys_config c ON a.`status` = c.id
        LEFT JOIN w_order_sale_sku_driver b ON a.id = b.sale_sku_id
        LEFT JOIN w_driverinfo d ON b.driver_id = d.id
        LEFT JOIN w_customer wc on s.customer_id = wc.id
        WHERE
        a.is_delete = 'N'
        AND a. STATUS = 49
        <include refid="sql_where"/>
    </select>


    <select id="queryListById" parameterType="map" resultType="dto">
        select
        a.*
        FROM
        w_order_sale_sku AS a
        WHERE
        a.is_delete = 'N'
        and a.status != 50
        and a.sale_id=#{sale_id}
    </select>


    <!--更新发货通知表状态-->
    <update id="updateParentSkuStatus" parameterType="dto">
        update w_order_sale
        set
        status=50,
        update_time = now()
        where id = #{sale_id}
    </update>

    <!--更新发货商品关联表状态-->
    <update id="updateSkuStatus" parameterType="dto">
        update w_order_sale_sku
        set
        status=50,
        update_time = now()
        where id = #{id}
    </update>

    <!--更新发货商品关联表状态-->
    <update id="updateBuyStatus" parameterType="dto">
        UPDATE w_order_store_sku a
        SET a.STATUS = 2,
        update_time = now()
        WHERE a.status=1
        and
        a.in_batch_number = #{in_batch_number}

        ORDER BY
        a.id
        LIMIT ${num}
    </update>


    <!-- 删除 -->
    <delete id="deleteInfo" parameterType="map">
        UPDATE w_order_sale set is_delete = 'Y' WHERE id = #{id}
    </delete>


    <!-- 查询 -->
    <select id="getInfo" parameterType="map" resultType="dto">
        SELECT
        a.*, b.`name` AS sku_name,c.order_no
        FROM
        w_order_sale_sku a
        LEFT JOIN w_order_buy_sku b ON a.buy_sku_id = b.id
        LEFT JOIN w_order_sale c on a.sale_id = c.id
        WHERE
        a.is_delete = 'N'
        <include refid="sql_where"/>
        limit 0,1
    </select>

    <!-- 根据批次号查询tray_id和setting_id -->
    <select id="queryTraidAndSettingid" parameterType="map" resultType="dto">
        SELECT a.*
        FROM w_order_store_sku a
        WHERE a.is_delete = 'N'
        and a.in_batch_number=#{in_batch_number}
        limit 0,1
    </select>


    <!-- 根据tray_id和setting_id查询该托盘是否空余 -->
    <select id="queryOrderStoreSku" parameterType="map" resultType="dto">
        SELECT count(a.id) as total
        FROM w_order_store_sku a
        WHERE a.is_delete = 'N'
        and a.status in(0,1)
        and a.tray_id=#{tray_id}
        and a.setting_id=#{setting_id}
    </select>
</mapper>
