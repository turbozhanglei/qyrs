<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd"><!-- 参数管理手工映射SQL语句 -->
<!-- 参数管理手工映射SQL语句 -->
<mapper namespace="echarts">


    <select id="queryCountStoreSku" parameterType="map" resultType="dto">
        SELECT
        a.deptid,
        a.buy_sku_id,
        a.buy_checked_id,
        a.sku_id,
        SUM(a.stock) AS total,
        a.tray_id,
        a.provider_id,
        a.setting_id,
        b.`name`
        FROM
        w_order_store_sku a
        LEFT JOIN w_sku b ON a.sku_id = b.id
        WHERE
        a.`status` = 0
        <if test="null!=startTime  and ''!= startTime">
            and DATE(a.create_time) &gt;= #{startTime}
        </if>
        <if test="null!=endTime  and ''!= endTime">
            and DATE(a.create_time) &lt;= #{endTime}
        </if>
        GROUP BY
        a.sku_id
        ORDER BY total DESC
        <if test="null!=limit  and ''!= limit">
            limit ${limit}
        </if>
    </select>

    <select id="queryCountOrderInStore" parameterType="map" resultType="dto">
        SELECT
        SUM(a.stock) AS total,
        b.`name`
        FROM
        w_order_in_store a
        LEFT JOIN w_sku b ON a.sku_id = b.id
        WHERE
        a.`status` = 2
        AND a.is_delete = 'N'
        <if test="null!=startTime  and ''!= startTime">
            and DATE(a.update_time) &gt;= #{startTime}
        </if>
        <if test="null!=endTime  and ''!= endTime">
            and DATE(a.update_time) &lt;= #{endTime}
        </if>
        GROUP BY
        a.sku_id
        ORDER BY total DESC
        <if test="null!=limit  and ''!= limit">
            limit ${limit}
        </if>
    </select>

    <select id="queryCountOrderOutStore" parameterType="map" resultType="dto">
        SELECT
        SUM(a.out_stock_num) AS total,
        sku.`name`
        FROM
        w_order_sale_sku AS a
        LEFT JOIN w_sku sku ON a.sku_id = sku.id
        WHERE
        a.is_delete = 'N'
        AND a.`status` = 50
        <if test="null!=startTime  and ''!= startTime">
            and DATE(a.update_time) &gt;= #{startTime}
        </if>
        <if test="null!=endTime  and ''!= endTime">
            and DATE(a.update_time) &lt;= #{endTime}
        </if>
        GROUP BY
        a.sku_id
        ORDER BY total DESC
        <if test="null!=limit  and ''!= limit">
            limit ${limit}
        </if>
    </select>


    <!-- 列表查询 -->
    <select id="queryWarnStore" parameterType="map" resultType="dto">
        SELECT
        t.`name`,
        SUM(total_stock) as total
        FROM
        (
        SELECT
        to_days(
        ADDDATE(
        obk.roduction_date,
        INTERVAL CEILING(
        obk.shelflife * cu.warningday_num
        ) DAY
        )
        ) - to_days(now()) AS warning_days,
        obk.`name`,
        a.sku_id,
        a.total_stock
        FROM
        (
        SELECT
        deptid,
        buy_sku_id,
        buy_checked_id,
        sku_id,
        tray_id,
        provider_id,
        setting_id,
        in_batch_number,
        SUM(stock) AS total_stock,
        creator,
        create_time
        FROM
        w_order_store_sku
        WHERE
        is_delete = 'N'
        AND `status` = 0
        GROUP BY
        in_batch_number
        ) a
        LEFT JOIN w_customer cu ON cu.id = a.provider_id
        LEFT JOIN w_order_buy_sku obk ON obk.id = a.buy_sku_id
        WHERE
        TO_DAYS(obk.expiration_date) >= TO_DAYS(NOW())
        HAVING
        warning_days &lt; 0
        ) t
        GROUP BY t.sku_id
        ORDER BY total DESC
        <if test="null!=limit  and ''!= limit">
            limit ${limit}
        </if>
    </select>

    <!-- 列表查询 -->
    <select id="queryErrorStore" parameterType="map" resultType="dto">
        SELECT
        t.`name`,
        SUM(total_stock) AS total
        FROM
        (
        SELECT
        obk.`name`,
        a.sku_id,
        a.total_stock
        FROM
        (
        SELECT
        deptid,
        buy_sku_id,
        buy_checked_id,
        sku_id,
        tray_id,
        provider_id,
        setting_id,
        in_batch_number,
        SUM(stock) AS total_stock,
        creator,
        create_time
        FROM
        w_order_store_sku
        WHERE
        is_delete = 'N'
        AND `status` = 0
        GROUP BY
        in_batch_number
        ) a
        LEFT JOIN w_order_buy_sku obk ON obk.id = a.buy_sku_id
        WHERE
        TO_DAYS(obk.expiration_date) &lt; TO_DAYS(NOW())
        ) t
        GROUP BY t.sku_id
        ORDER BY total DESC
        <if test="null!=limit  and ''!= limit">
            limit ${limit}
        </if>
    </select>

</mapper>
