<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd"><!-- 参数管理手工映射SQL语句 -->
<!-- 参数管理手工映射SQL语句 -->
<mapper namespace="order_buy">


    <sql id="sql_where">
        <if test="null!=number  and ''!= number">
            and a.number LIKE concat('%',#{number},'%')
        </if>
        <if test="null!=buy_checked_status  and ''!= buy_checked_status">
            and obc.`status` = #{buy_checked_status}
        </if>
        <if test="null!=status">
            and a.status = #{status}
        </if>
        <if test="null!=customer_id  and ''!= customer_id">
            and a.customer_id = #{customer_id}
        </if>
        <if test="null!=id  and ''!= id">
            and a.id = #{id}
        </if>
        <if test="null!=status">
            and a.status = #{status}
        </if>
        <if test="null!=order_no  and ''!= order_no">
            and a.order_no LIKE concat('%',#{order_no},'%')
        </if>
        <if test="null!=customerno  and ''!= customerno">
            and d.customerno LIKE concat('%',#{customerno},'%')
        </if>
        <if test="null!=client_name  and ''!= client_name">
            and d.client_name LIKE concat('%',#{client_name},'%')
        </if>
        <if test="null!=manager_mobile  and ''!= manager_mobile">
            and d.manager_mobile LIKE concat('%',#{manager_mobile},'%')
        </if>
        <if test="null!=manager_name  and ''!= manager_name">
            and d.manager_name LIKE concat('%',#{manager_name},'%')
        </if>
        <if test="null!=name  and ''!= name">
            and b.name LIKE concat('%',#{name},'%')
        </if>
        <if test="null!=num  and ''!= num">
            and b.num LIKE concat('%',#{num},'%')
        </if>
        <if test="null!=level  and ''!= level">
            and b.level LIKE concat('%',#{level},'%')
        </if>
        <if test="null!=buy_sku_id  and ''!= buy_sku_id">
            and b.id = #{buy_sku_id}
        </if>
        <if test="null!=buy_sku_status  and ''!= buy_sku_status">
            and b.status = #{buy_sku_status}
        </if>
        <if test="null!=supplier_company  and ''!= supplier_company">
            and a.supplier_company LIKE con cat('%',#{supplier_company},'%')
        </if>
        <if test="null!=supplier_people  and ''!= supplier_people">
            and a.supplier_people LIKE concat('%',#{supplier_people},'%')
        </if>
        <if test="null!=supplier_people_mobile  and ''!= supplier_people_mobile">
            and a.supplier_people_mobile LIKE concat('%',#{supplier_people_mobile},'%')
        </if>
        <if test="null!=carrier_company  and ''!= carrier_company">
            and a.carrier_company LIKE concat('%',#{carrier_company},'%')
        </if>
        <if test="null!=recipient_store  and ''!= recipient_store">
            and a.recipient_store LIKE concat('%',#{recipient_store},'%')
        </if>
        <if test="null!=bill  and ''!= bill">
            and a.bill LIKE concat('%',#{bill},'%')
        </if>
        <if test="null!=recipient_store_address  and ''!= recipient_store_address">
            and a.recipient_store_address LIKE concat('%',#{recipient_store_address},'%')
        </if>
        <if test="null!=recipient_people  and ''!= recipient_people">
            and a.recipient_people LIKE concat('%',#{recipient_people},'%')
        </if>
        <if test="null!=recipient_store_address  and ''!= recipient_store_address">
            and a.recipient_store_address LIKE concat('%',#{recipient_store_address},'%')
        </if>
        <if test="null!=remark  and ''!= remark">
            and a.remark LIKE concat('%',#{remark},'%')
        </if>
        <if test="null!=recipient_people_mobile  and ''!= recipient_people_mobile">
            and a.recipient_people_mobile LIKE concat('%',#{recipient_people_mobile},'%')
        </if>

        <if test="null!=start_time_min  and ''!= start_time_min">
            and a.start_time>=#{start_time_min}
        </if>
        <if test="null!=start_time_max  and ''!= start_time_max">
            and a.start_time&lt;=#{start_time_max}
        </if>
        <if test="null!=demand_date_min  and ''!= demand_date_min">
            and a.end_time >= #{demand_date_min}
        </if>
        <if test="null!=demand_date_max  and ''!= demand_date_max">
            and a.end_time &lt;= #{demand_date_max}
        </if>
        <if test="null!=arrival_date_min  and ''!= arrival_date_min">
            and a.expect_time >= #{arrival_date_min}
        </if>
        <if test="null!=arrival_date_max  and ''!= arrival_date_max">
            and a.expect_time &lt;= #{arrival_date_max}
        </if>
        <if test="null!=roduction_date_min  and ''!= roduction_date_min">
            and b.roduction_date >= #{roduction_date_min}
        </if>
        <if test="null!=roduction_date_max  and ''!= roduction_date_max">
            and b.roduction_date &lt;= #{roduction_date_max}
        </if>
        <if test="null!=expiration_date_min  and ''!= expiration_date_min">
            and b.expiration_date >= #{expiration_date_min}
        </if>
        <if test="null!=expiration_date_max  and ''!= expiration_date_max">
            and b.expiration_date &lt;= #{expiration_date_max}
        </if>
        <if test="null!=is_check_end  and ''!= is_check_end">
            and b.`status` in (0,1,2)
        </if>
        <if test="null!=is_transfer">
            and b.`is_transfer` = #{is_transfer}
        </if>
        <if test="null!=transfer_store  and ''!= transfer_store">
            and b.transfer_store LIKE concat('%',#{transfer_store},'%')
        </if>
        <if test="null!=transfer_people  and ''!= transfer_people">
            and b.transfer_people LIKE concat('%',#{transfer_people},'%')
        </if>

    </sql>
    <!-- 列表查询 -->
    <select id="queryList" parameterType="map" resultType="dto">
        SELECT
        *
        FROM
        (
        SELECT
        a.*,
        b.roduction_date,
        b.expiration_date,
        b.num,
        b.number,
        b.name,
        b.level,
        b.id as buy_sku_id,
        b.status as buy_sku_status,
        d.client_name,
        d.customerno,
        d.manager_name,
        d.manager_mobile,
        obc.`status` as buy_checked_status,
        obc.id as order_buy_checked_id,
        obc.unit_volume,
        obc.unit_weight,
        b.transfer_store,
        b.transfer_people,
        b.transfer_store_address,
        b.transfer_people_mobile,
        b.transfer_expect_time,
        b.transfer_end_time
        FROM
        w_order_buy a
        LEFT JOIN
        w_order_buy_sku b on a.id = b.order_id
        LEFT JOIN
        w_customer d on a.customer_id = d.id
        LEFT JOIN w_order_buy_checked obc on obc.buy_sku_id = b.id
        WHERE a.is_delete ='N' AND b.is_delete ='N'
        <include refid="sql_where"/>
        ORDER BY a.id DESC , b.id DESC
        <if test="null!=start">
            limit #{start},#{end}
        </if>
        ) a
        LEFT JOIN
        (
        SELECT
        a.buy_sku_id,
        GROUP_CONCAT(b.drivername) drivername,
        GROUP_CONCAT(b.driver_number) driver_number
        FROM
        w_order_buy_sku_driver a
        LEFT JOIN
        w_driverinfo b on a.driver_id = b.id
        WHERE a.is_delete ='N' AND b.is_delete ='N'
        GROUP BY a.buy_sku_id) b on a.buy_sku_id = b.buy_sku_id
        ORDER BY a.id DESC,a.buy_sku_id DESC
    </select>

    <!-- 列表查询订单 -->
    <select id="queryOrderList" parameterType="map" resultType="dto">
        SELECT
        a.*,
        b.roduction_date,
        b.expiration_date,
        d.client_name as customerno,
        d.manager_name,
        d.manager_mobile,
        GROUP_CONCAT(b.name) as product_name,
        GROUP_CONCAT(b.level) as product_level,
        GROUP_CONCAT(b.id) as ids,
        GROUP_CONCAT(b.transfer_store) AS transfer_store,
        GROUP_CONCAT(b.transfer_people) AS transfer_people,
        GROUP_CONCAT(b.transfer_store_address) AS transfer_store_address,
        GROUP_CONCAT(b.transfer_people_mobile) AS transfer_people_mobile,
        GROUP_CONCAT(b.transfer_expect_time) AS transfer_expect_time,
        GROUP_CONCAT(b.transfer_end_time) AS transfer_end_time
        FROM
        w_order_buy a
        LEFT JOIN
        w_order_buy_sku b on a.id = b.order_id
        LEFT JOIN
        w_customer d on a.customer_id = d.id

        WHERE a.is_delete ='N' and b.is_delete='N'

        <include refid="sql_where"/>
        group by a.id
        ORDER BY a.id DESC
        <if test="null!=start">
            limit #{start},#{end}
        </if>
    </select>
    <!-- 列表数量查询 -->
    <select id="queryOrderListCount" parameterType="map" resultType="dto">
        SELECT
        count(1) as total
        FROM
        (SELECT
        a.*,
        b.roduction_date,
        b.expiration_date,
        d.client_name as customerno,
        d.manager_name,
        d.manager_mobile,
        GROUP_CONCAT(b.name) as product_name,
        GROUP_CONCAT(b.level) as product_level,
        GROUP_CONCAT(b.id) as ids
        FROM
        w_order_buy a
        LEFT JOIN
        w_order_buy_sku b on a.id = b.order_id
        LEFT JOIN
        w_customer d on a.customer_id = d.id
        WHERE a.is_delete ='N' and b.is_delete='N'
        <include refid="sql_where"/>
        group by a.id
        ORDER BY a.id DESC
        ) as a

    </select>

    <!-- 列表数量查询 -->
    <select id="queryListCount" parameterType="map" resultType="dto">
        SELECT
        count(1) as total
        FROM
        (
        SELECT
        a.*,
        b.roduction_date,
        b.expiration_date,
        b.num,
        b.number,
        b.name as product_name,
        b.level as product_level,
        d.customerno
        FROM
        w_order_buy a
        LEFT JOIN
        w_order_buy_sku b on a.id = b.order_id
        LEFT JOIN
        w_customer d on a.customer_id = d.id
        WHERE a.is_delete ='N' AND b.is_delete ='N'
        <include refid="sql_where"/>
        ) a

    </select>

    <!-- 订单修改 -->
    <update id="updateInfo" parameterType="dto">
        UPDATE `w_order_buy`
        SET
        <if test="null!=order_no  and ''!= order_no">order_no=#{order_no} ,</if>
        <if test="null!=customer_id  and ''!= customer_id">customer_id=#{customer_id} ,</if>
        <if test="null!=supplier_company  and ''!= supplier_company">supplier_company=#{supplier_company} ,</if>
        <if test="null!=supplier_people  and ''!= supplier_people">supplier_people=#{supplier_people} ,</if>
        <if test="null!=supplier_people_mobile  and ''!= supplier_people_mobile">
            supplier_people_mobile=#{supplier_people_mobile} ,
        </if>
        <if test="null!=carrier_company  and ''!= carrier_company">carrier_company=#{carrier_company} ,</if>
        <if test="null!=recipient_store  and ''!= recipient_store">recipient_store=#{recipient_store} ,</if>
        <if test="null!=recipient_store_address  and ''!= recipient_store_address">
            recipient_store_address=#{recipient_store_address} ,
        </if>
        <if test="null!=recipient_people  and ''!= recipient_people">recipient_people=#{recipient_people} ,</if>
        <if test="null!=recipient_people_mobile  and ''!= recipient_people_mobile">
            recipient_people_mobile=#{recipient_people_mobile} ,
        </if>
        <if test="null!=priority  and ''!= priority">priority=#{priority} ,</if>
        <if test="null!=start_time  and ''!= start_time">start_time=#{start_time} ,</if>
        <if test="null!=expect_time  and ''!= expect_time">expect_time=#{expect_time} ,</if>
        <if test="null!=end_time  and ''!= end_time">end_time=#{end_time} ,</if>
        <if test="null!=remark  and ''!= remark">remark=#{remark} ,</if>
        <if test="null!=status">status=#{status} ,</if>
        <if test="null!=order_type  and ''!= order_type">order_type=#{order_type} ,</if>
        <if test="null!=provider_id  and ''!= provider_id">provider_id=#{provider_id} ,</if>
        <if test="null!=provider_carrier_id  and ''!= provider_carrier_id">provider_carrier_id=#{provider_carrier_id} ,
        </if>
        <if test="null!=provider_owner_id  and ''!= provider_owner_id">provider_owner_id=#{provider_owner_id} ,</if>
        <if test="null!=carrier  and ''!= carrier">carrier=#{carrier} ,</if>
        <if test="null!=purchase  and ''!= purchase">purchase=#{purchase} ,</if>
        <if test="null!=receive  and ''!= receive">receive=#{receive} ,</if>
        <if test="null!=create_time  and ''!= create_time">create_time=#{create_time} ,</if>
        <if test="null!=creator  and ''!= creator">creator=#{creator} ,</if>
        <if test="null!=updator  and ''!= updator">updator=#{updator} ,</if>
        <if test="null!=is_delete  and ''!= is_delete">is_delete=#{is_delete} ,</if>
        <if test="null!=bill_photo  and ''!= bill_photo">bill_photo=#{bill_photo} ,</if>
        <if test="null!=bill  and ''!= bill">bill=#{bill} ,</if>
        <if test="null!=bill_zip  and ''!= bill_zip">bill_zip=#{bill_zip} ,</if>
        <if test="null!=shelflife  and ''!= shelflife">shelflife=#{shelflife} ,</if>
        update_time = now()
        where
        1=1
        <if test="null!=id  and ''!= id">
            and id = #{id}
        </if>
    </update>

    <!-- 对象查询 -->
    <select id="getInfo" parameterType="map" resultType="dto">
        SELECT
        a.*,
        b.roduction_date,
        b.expiration_date,
        d.client_name as customerno,
        d.manager_name,
        d.manager_mobile,
        GROUP_CONCAT(b.name) as product_name,
        GROUP_CONCAT(b.level) as product_level
        FROM
        w_order_buy a
        LEFT JOIN
        w_order_buy_sku b on a.id = b.order_id
        LEFT JOIN
        w_customer d on a.customer_id = d.id
        WHERE a.is_delete ='N' and b.is_delete='N'
        <include refid="sql_where"/>
        group by a.id
        ORDER by a.id
        limit 1
    </select>

    <!-- 对象添加 -->
    <insert id="saveInfo" parameterType="map">
        INSERT INTO `w_order_buy` ( `order_no`, `customer_id`, `supplier_company`, `supplier_people`,
        `supplier_people_mobile`, `carrier_company`, `recipient_store`, `recipient_store_address`, `recipient_people`,
        `recipient_people_mobile`, `priority`, `start_time`, `expect_time`, `end_time`, `remark`, `status`,
        `order_type`, `provider_id`, `provider_carrier_id`, `provider_owner_id`, `carrier`, `purchase`, `receive`,
        `create_time`, `creator`, `update_time`, `updator`, `is_delete`,`bill`,`bill_photo`,bill_zip) VALUES (
        #{order_no},
        #{customer_id}, #{supplier_company}, #{supplier_people}, #{supplier_people_mobile}, #{carrier_company},
        #{recipient_store}, #{recipient_store_address}, #{recipient_people}, #{recipient_people_mobile}, #{priority},
        NOW(),
        #{expect_time}, #{end_time}, #{remark}, '0', #{order_type}, #{provider_id}, #{provider_carrier_id},
        #{provider_owner_id}, #{carrier}, #{purchase}, #{receive}, NOW(), #{creator}, NOW(), #{updator},
        'N',#{bill},#{bill_photo},#{bill_zip})
        <selectKey resultType="java.lang.Long" keyProperty="id">
            SELECT LAST_INSERT_ID() as id
        </selectKey>
    </insert>

    <!--订单商品列表查询 -->
    <select id="querySkuList" parameterType="map" resultType="dto">
        select
        order_buy_sku.id,
        sku. NAME AS sku_name,
        sku. LEVEL,
        sku. LEVEL AS LEVEL1,
        order_buy_sku.batch_number,
        order_buy_sku.number sku_number,
        order_buy_sku.measure_unit,
        order_buy_sku.price,
        order_buy_sku.remark
        FROM oms_order_buy_sku order_buy_sku
        LEFT JOIN oms_sku sku ON sku.id = order_buy_sku.sku_id
        where order_buy_sku.order_id = #{id}
    </select>

    <!--订单商品添加 -->
    <insert id="insertSkuInfo" parameterType="map">
        INSERT INTO oms_order_buy_sku (
        sku_id,
        order_id,
        batch_number,
        number,
        measure_unit,
        price,
        amount,
        remark,
        create_time,
        creator,
        update_time,
        updator
        )
        VALUES
        (
        #{sku_id},
        (select id from oms_order_buy where order_no = CONCAT('O', #{order_no})),
        #{batch_number},
        #{buy_sku_number},
        #{measure_unit},
        #{sku_price},
        #{amount},
        #{remark},
        now(),
        #{creator},
        now(),
        #{updator}
        )
        <selectKey resultType="java.lang.String" keyProperty="id">
            SELECT LAST_INSERT_ID() as id
        </selectKey>
    </insert>

    <!--订单商品对象查询 -->
    <select id="selectSkuInfo" parameterType="map" resultType="dto">
        select
        order_buy_sku.order_id,
        order_buy_sku.sku_id,
        sku.name AS sku_name,
        sku.number as sku_number,
        sku.level,
        sku.level AS level1,
        order_buy_sku.batch_number,
        order_buy_sku.number as buy_sku_number,
        order_buy_sku.measure_unit,
        order_buy_sku.price,
        order_buy_sku.amount as sku_amount,
        order_buy_sku.remark
        FROM
        oms_order_buy_sku order_buy_sku
        LEFT JOIN oms_sku sku ON sku.id = order_buy_sku.sku_id
        where order_buy_sku.id = #{id}
    </select>


    <!--订单商品对象修改 -->
    <update id="insertSkuUpdate" parameterType="map">
        UPDATE oms_order_buy_sku SET
        update_time = now()
        <if test="null!=batch_number  and ''!= batch_number">batch_number = #{batch_number} ,</if>
        <if test="null!=sku_number  and ''!= sku_number">sku_number = #{sku_number} ,</if>
        <if test="null!=measure_unit  and ''!= measure_unit">measure_unit = #{measure_unit} ,</if>
        <if test="null!=amount  and ''!= amount">amount = #{amount} ,</if>
        <if test="null!=remark  and ''!= remark">remark = #{remark} ,</if>
        where id = #{id}
    </update>

    <!--订单商品金额合计 -->
    <select id="sumOrderSkuInfo" parameterType="map" resultType="dto">
        SELECT
        order_id,
        sum(amount) as amount
        FROM
        oms_order_buy_sku
        WHERE
        order_id = (
        SELECT
        id
        FROM
        oms_order_buy
        WHERE
        order_no = CONCAT('O', #{order_no})
        )
        GROUP BY order_id
    </select>


    <!--查询司机信息 -->
    <select id="queryDriverList" parameterType="map" resultType="dto">
        SELECT
        a.*,
        a.driver_number as value
        FROM
        w_driverinfo a
        WHERE 1 = 1 AND a.is_delete = 'N'
        <if test="null!=drivername  and ''!= drivername">
            and a.drivername LIKE concat('%',#{drivername},'%')
        </if>
        <if test="null!=driver_number  and ''!= driver_number">
            and a.driver_number LIKE concat('%',#{driver_number},'%')
        </if>
    </select>

    <!-- 订单状态修改 -->
    <update id="updateStatus" parameterType="dto">
        UPDATE `w_order_buy`
        set
        status=#{status},
        updator=#{updator},
        update_time = now()
        where
        id = #{id}

    </update>

    <!-- 订单状态修改 -->
    <update id="updateIsChecked" parameterType="dto">
        UPDATE `w_order_buy`
        set
        is_checked=#{is_checked},
        updator=#{updator},
        update_time = now()
        where
        id = #{id}
    </update>


    <!--查询子订单修改 -->
    <select id="queryOrderListForReturn" parameterType="map" resultType="dto">
        SELECT
        a.*
        FROM
        w_order_buy_sku a
        WHERE 1 = 1 AND a.is_delete = 'N' and a.status=3
        <if test="null!=order_id  and ''!= order_id">
            and a.order_id = #{order_id}
        </if>
    </select>

    <select id="queryOrderIdForReturn" parameterType="map" resultType="dto">
        SELECT
        a.*,
        b.roduction_date,
        b.expiration_date,
        b.num,
        b.number,
        b. NAME,
        b. LEVEL,
        b.id AS buy_sku_id,
        b. STATUS AS buy_sku_status,
        d.client_name,
        d.customerno,
        d.manager_name,
        d.manager_mobile
        FROM
        w_order_buy a
        LEFT JOIN w_order_buy_sku b ON a.id = b.order_id
        LEFT JOIN w_customer d ON a.customer_id = d.id
        WHERE 1=1
        and a.is_delete = 'N'
        AND b.is_delete = 'N'
        <include refid="sql_where"/>
        GROUP BY
        a.id
        ORDER BY a.id desc
    </select>

    <!-- 订货单批次表修改 -->
    <update id="updateSkuStatus" parameterType="dto">
        UPDATE `w_order_buy_sku`
        set
        status=#{status},
        updator=#{updator},
        update_time = now()
        where
        id = #{id}

    </update>


    <!-- 列表查询订单 -->
    <select id="queryWaitCheckedList" parameterType="map" resultType="dto">
        SELECT
        a.*, b.roduction_date,
        b.expiration_date,
        d.client_name AS customerno,
        d.manager_name,
        d.manager_mobile,
        GROUP_CONCAT(b. NAME) AS product_name,
        GROUP_CONCAT(b. LEVEL) AS product_level,
        ois.`status`
        FROM
        w_order_buy a
        LEFT JOIN w_order_buy_sku b ON a.id = b.order_id
        LEFT JOIN w_customer d ON a.customer_id = d.id
        LEFT JOIN w_order_in_store ois ON ois.buy_sku_id = b.id
        WHERE
        a.is_delete = 'N'
        AND b.is_delete = 'N'
        AND (ois.`status` is NULL or ois.`status` = 0)
        <include refid="sql_where"/>
        group by a.id
        ORDER BY a.id DESC
        <if test="null!=start">
            limit #{start},#{end}
        </if>
    </select>




    <!-- 列表查询订单 -->
    <select id="queryWaitCheckOrderIds" parameterType="map" resultType="dto">
        SELECT
            a.id
        FROM
            w_order_buy a
        WHERE
            a.is_delete = 'N'
        AND a.`status` = 0
        AND (now() - a.start_time) > 1800
        AND is_checked = 0
    </select>

</mapper>
